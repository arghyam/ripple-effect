import { ResolutionCondition } from '../../types';
import { Token } from '../../pointers';
import { BindingsVault } from '../BindingsVault';
import type { DependencyModule } from '../DependencyModule';
import type { BindOrUseSyntax } from './BindOrUseSyntax';
export declare class FromSyntax {
    private readonly vault;
    private readonly tokens;
    private readonly getVault;
    private readonly condition?;
    constructor(vault: BindingsVault, tokens: Token[], getVault: (target: BindOrUseSyntax) => BindingsVault, condition?: ResolutionCondition | undefined);
    /**
     * @description
     * Uses bindings from the dependency module.
     *
     * @param dependencyModule - the dependency module from which the tokens will be used.
     *
     * @link https://brandi.js.org/reference/container#usetokensfrommodule
     */
    from(dependencyModule: DependencyModule): void;
}
