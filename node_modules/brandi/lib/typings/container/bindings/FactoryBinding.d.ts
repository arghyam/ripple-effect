import { UnknownCreator } from '../../types';
import { Binding, Type } from './Binding';
export declare type FactoryInitializer = (instance: unknown, ...args: unknown[]) => unknown;
export declare class FactoryBinding implements Binding {
    readonly impl: {
        creator: UnknownCreator;
        initializer?: FactoryInitializer;
    };
    readonly type = Type.Factory;
    constructor(impl: {
        creator: UnknownCreator;
        initializer?: FactoryInitializer;
    });
}
export declare const isFactoryBinding: (binding: Binding) => binding is FactoryBinding;
